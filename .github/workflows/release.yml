name: Build

on:
  push:
    branches:
      - main

jobs:
  set-env:
    runs-on: windows-latest
    outputs:
      VST2_SDK_PATH: ${{ steps.set-env.outputs.VST2_SDK_PATH }}
    steps:
      - name: Set VST2_SDK_PATH environment variable
        run: echo "VST2_SDK_PATH=${{ github.workspace }}\\VST_SDK\\vst3sdk" >> $GITHUB_ENV

  build:
    runs-on: windows-latest
    needs: set-env
    env:
      VST2_SDK_PATH: ${{ needs.set-env.outputs.VST2_SDK_PATH }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 输出环境变量
      - name: Check VST2_SDK_PATH
        run: |
          Write-Host "VST2_SDK_PATH: $env:VST2_SDK_PATH"

      # 输出 VST2_SDK_PATH 变量以验证是否已正确设置
      - name: Check if VST2_SDK_PATH is set
        run: |
          Write-Host "VST2_SDK_PATH is set to: $env:VST2_SDK_PATH"

      # 安装 CMake
      - name: Install CMake
        run: |
          mkdir cmake
          Invoke-WebRequest -Uri "https://github.com/Kitware/CMake/releases/download/v3.21.0/cmake-3.21.0-windows-x86_64.zip" -OutFile "cmake/cmake.zip"
          Expand-Archive -Path cmake/cmake.zip -DestinationPath cmake
          Add-Content -Path $env:GITHUB_PATH -Value "$(Get-Location)/cmake/bin"
        shell: powershell

      # 设置 Visual Studio 2022
      - name: Set up Visual Studio 2022
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 'latest'

      # 配置项目
      - name: Configure project
        run: |
          $DEPS = ""

          if (-not [string]::IsNullOrEmpty("${AAX_SDK_PATH}")) {
            Write-Host "Will build AAX plugin"
            $DEPS = "$DEPS -D AAX_SDK_PATH=${AAX_SDK_PATH}"
          }

          if (-not [string]::IsNullOrEmpty("${VST2_SDK_PATH}")) {
            Write-Host "Will build VST2 plugin"
            $DEPS = "$DEPS -D VST2_SDK_PATH=${VST2_SDK_PATH}"
          }

          #cmake -G "Visual Studio 15 2017" -A "x64" $DEPS -B build
          cmake -G "Visual Studio 17 2022" -A "x64" $DEPS -B build

      # 构建项目
      - name: Build project
        run: |
          cd D:\a\sonobus\sonobus
          .\buildcmake.sh

      # 上传构建产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Release-Artifacts
          path: D:\a\sonobus\sonobus\build\SonoBus_artefacts\Release
